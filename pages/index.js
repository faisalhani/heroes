import Head from "next/head";
import styles from "../styles/Home.module.css";
import React, { useState } from "react";
import Switch from "react-input-switch";
import { Rating } from "react-simple-star-rating";
import Link from "next/link";

import Footer from "../components/Footer";

export default function Home({ message }) {
  const [state, setState] = useState(message);
  const [prev] = useState(message);
  const [searchTerm, setSearchTerm] = useState("");
  const [isChecked, setIsChecked] = useState(false);

  const handleAdd = (newRating, index) => {
    console.log(newRating, "index: ", index);
    let array = state;
    array[index].rate = newRating;
    console.log(array);
    setState(array);
  };

  function sort(value) {
    const sortByName = [...state];
    if (value) {
      setIsChecked(value);
      sortByName.sort((a, b) => {
        return b.rate - a.rate;
      });
    } else {
      setIsChecked(!value);
      return setState(prev);
    }

    setState(sortByName);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Heroes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h2 className={styles.title}>Heroes</h2>
        <div style={{ margin: "0 auto", marginTop: "10%" }}>
          <label>Search: </label>
          <input type="text" onChange={(e) => setSearchTerm(e.target.value)} />
        </div>
        <div>
          <label> sort by Power: </label>
          <Switch
            theme={{ primaryColor: "blue" }}
            value={isChecked}
            onChange={(value) => sort(value)}
          />
        </div>

        <div className={styles.grid}>
          {state
            ? state
                .filter((val) => {
                  if (searchTerm == "") {
                    return val;
                  } else if (
                    val.name.toLowerCase().includes(searchTerm.toLowerCase())
                  ) {
                    return val;
                  }
                })

                .map((data, key) => {
                  return (
                    <div key={key} className={styles.card}>
                      {/* size: 30, value: 5, edit: false, */}
                      {console.log("index", data.name)}

                      <Link
                        href={{
                          pathname: "/heroes/[slug]",
                          query: { slug: data.id },
                        }}
                      >
                        <h2 style={{ cursor: "pointer" }}>{data.name}</h2>
                      </Link>

                      <p>{data.powers}</p>
                      <Rating
                        onClick={(value) => handleAdd(value, key)}
                        ratingValue={state[key].rate} /* Available Props */
                      />
                    </div>
                  );
                })
            : ""}
        </div>
      </main>

      <Footer />
    </div>
  );
}

export async function getServerSideProps() {
  const res = await fetch(`https://heroes-five.vercel.app//api/heroes`);

  const data = await res.json();
  console.log(data);
  return {
    props: { message: data }, // will be passed to the page component as props
  };
}
